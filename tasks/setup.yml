---
- name: Run Setup
  become: true
  block:
    - name: Install required packages
      apt:
        name: "{{ required_packages }}"
        update_cache: true

    - name: Create scalelite-spool group
      group:
        name: scalelite-spool
        state: present
        gid: 2000

    - name: Create bigbluebutton user
      ansible.builtin.user:
        name: bigbluebutton
        create_home: true
        groups:
          - scalelite-spool

    - name: Clone scalelite-run
      git:
        repo: https://github.com/ebbba-org/scalelite-run.git
        dest: /root/scalelite-run
        version: v1.1
        force: true

    - name: Replace docker-compose.yml
      template:
        src: docker-compose.yml.j2
        dest: /root/scalelite-run/docker-compose.yml
        owner: root
        group: root
        mode: '0644'

    - name: Create .env file
      template:
        src: .env.j2
        dest: /root/scalelite-run/.env
        owner: root
        group: root
        mode: '0644'

    - name: Tear down existing services
      community.docker.docker_compose:
        project_src: /root/scalelite-run
        state: absent

    - name: Create and start services
      community.docker.docker_compose:
        project_src: /root/scalelite-run
      register: dc_output

    - name: Run init-recordings-bigbluebutton.sh
      command:
        cmd: bash init-recordings-bigbluebutton.sh
        chdir: /root/scalelite-run/

    - name: Run init-recordings-scalelite.sh
      command:
        cmd: bash init-recordings-scalelite.sh
        chdir: /root/scalelite-run/

    - name: Create letsencrypt paths
      block:
        - name: Make sure certbot conf folder does not exist
          file:
            path: /root/scalelite-run/data/certbot/conf
            state: absent

        - name: Create a symbolic link
          file:
            src: /etc/letsencrypt/
            dest: /root/scalelite-run/data/certbot/conf
            owner: root
            group: root
            state: link
      when: docker_letsencrypt['enabled'] | bool
      rescue:
        - name: Attempt rescue
          block:
            - name: Force delete folder
              command:
                cmd: "rm -rvf conf"
                chdir: /root/scalelite-run/data/certbot/

            - name: Symlink again
              file:
                src: /etc/letsencrypt/
                dest: /root/scalelite-run/data/certbot/conf
                owner: root
                group: root
                state: link
          when: docker_letsencrypt['enabled'] | bool

    - name: Use own ssl-certificates
      block:
        - name: Ensure target directory exists
          file:
            dest: "/root/scalelite-run/data/certbot/conf/live/{{ inventory_hostname }}"
            state: directory
            mode: '0755'
        - name: install own ssl-cert
          become: true
          copy:
            src: "{{ own_ssl['cert_path'] }}"
            dest: '/root/scalelite-run/data/certbot/conf/live/{{ inventory_hostname }}/fullchain.pem'
            mode: '0644'
            force: true
        - name: install own ssl-key
          become: true
          copy:
            src: "{{ own_ssl['key_path'] }}"
            dest: '/root/scalelite-run/data/certbot/conf/live/{{ inventory_hostname }}/privkey.pem'
            mode: '0644'
            force: true
      when: own_ssl['enabled'] | bool

    - name: Create DB
      command:
        cmd: docker exec -it scalelite-api bin/rake db:setup
      ignore_errors: true

    - name: Restart services
      community.docker.docker_compose:
        project_src: /root/scalelite-run
        build: false
        restarted: true
